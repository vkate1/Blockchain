{"version":3,"sources":["Components/AllStudentComponent.js","getWeb3.js","Components/HeaderComponent.js","Components/HomeComponent.js","Components/AllCollegeComponent.js","Components/FooterComponent.js","Components/CardDetailComponent.js","Components/CardDetail.js","Components/MainComponents.js","App.js","serviceWorker.js","index.js"],"names":["x","ipfs","require","ipfsClient","host","port","protocol","Allpatrender","props","togglereg","a","art","isregistered","contract","methods","registerCollege","clg_id","send","from","accounts","gas","creatingcert","addCertificate","current","stu_id","stu_aadhar_no","state","certhash","certname","toggleModal","captureFile","event","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","setState","buffer","Buffer","result","console","log","uploadImage","add","error","loading","hash","on","docCount","isModalOpen","sellPrice","clgid","stuid","stuadd","singlecol","clid","bind","handleInputChange","this","singlecolId","sincol","cllg_id","clID","value","name","show","bux","xyz","singlecolID","className","style","display","to","stu_name","certcount","type","color","onClick","isOpen","toggle","htmlFor","id","onChange","accept","Component","AllStuComponent","creatingItems","addStudent","stuname","toggleModal1","fileSelectHandler","selectedFile","cust","manuf","clgname","isModalOpen1","title","artUrl","price","artHash","perCut","reg","clgaddr","bul","singlecoll","c","colId","call","rex","Menu","map","key","dish","ch","onSubmit","aadharno","imageDescription","ref","input","placeholder","required","getWeb3","Promise","resolve","reject","addEventListener","ethereum","web3","Web3","enable","provider","providers","HttpProvider","Header","conver","utils","toWei","converb","fromWei","isNavOpen","togglenav","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","Collapse","navbar","Nav","NavItem","width","justifyContent","balance","toString","Home","Container","but","owner","butname","Card","CardBody","CardTitle","CardText","clg_address","clg_name","Button","AllCllgComponent","addCollege","res","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","Footer","bottom","Certificate","cert","src","ipfs_hash","maxWidth","college_id","cert_id","cert_name","href","student_aadhar","AllCertComp","i","length","matchId","Main","componentDidMount","eth","getAccounts","getBalance","net","getId","networkId","deployedNetwork","BNContract","networks","instance","Contract","abi","address","collegecnt","response","push","allcoll","j","colleges","xt","studentcnt","stuId","students","certificatecnt","certy","stu","allce","filter","singleclg","singlecolid","storageValue","registered","exact","path","component","match","allcert","params","App","basename","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84d7ce49.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n//import moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport {Button,Form,FormGroup,Label,Input,Col,Card,CardImg,CardTitle,CardBody,CardText,Modal,ModalHeader,ModalBody} from 'reactstrap';\r\n\r\nimport Web3 from 'web3';\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\r\n\r\nlet allcoll = [];\r\nlet alldocs = [];\r\nconst ETHER = 1000000000000000000;\r\nlet show = 0;\r\nlet x;\r\nclass Allpatrender extends Component {\r\n    // let day = moment.unix(art.dateofComp);\r\n    // let xy = art.dateofComp;\r\n    // let date = new Date(xy*1000);\r\n    // let time = day.format('dddd MMMM Do YYYY, h:mm:ss a');\r\n    // let yz = xy != 0?\"bg-success text-white\":\"\";\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            docCount: 0,\r\n            art: [],\r\n            isModalOpen: false,\r\n            sellPrice: 0,\r\n            clgid:0,\r\n            stuid : 0,\r\n            certname : '',\r\n            stuadd : 0,\r\n            certhash : '',\r\n            loading : '',\r\n            buffer : null,\r\n            singlecol:0,\r\n            clid : 0\r\n\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.togglereg = this.togglereg.bind(this);\r\n        this.uploadImage = this.uploadImage.bind(this)\r\n        this.captureFile = this.captureFile.bind(this)\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let sincol = await this.props.singlecolId;\r\n        let clID = await this.props.art.cllg_id ;\r\n        this.setState({singlecol : sincol,clid : clID});\r\n        \r\n       }\r\n\r\n    togglereg = async () => {\r\n        if(this.props.art.isregistered){\r\n            const res = await this.props.contract.methods\r\n            .registerCollege(\r\n                this.props.art.clg_id,\r\n                false\r\n            )\r\n            .send({ from: this.props.accounts, gas: 1000000 });\r\n        }\r\n        else{\r\n            const res = await this.props.contract.methods\r\n            .registerCollege(\r\n                this.props.art.clg_id,\r\n                true\r\n            )\r\n            .send({ from: this.props.accounts, gas: 1000000 });\r\n     \r\n        }\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    creatingcert = async () => {\r\n\r\n        const res = await this.props.contract.methods\r\n            .addCertificate(\r\n                this.props.current,\r\n                this.props.art.stu_id,\r\n                this.props.art.stu_aadhar_no,\r\n                this.state.certhash,\r\n                this.state.certname\r\n            )\r\n            .send({ from: this.props.accounts, gas: 1000000 });\r\n\r\n        this.toggleModal();\r\n    };\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    captureFile = event => {\r\n\r\n        event.preventDefault()\r\n        const file = event.target.files[0]\r\n        const reader = new window.FileReader()\r\n        reader.readAsArrayBuffer(file)\r\n    \r\n        reader.onloadend = () => {\r\n          this.setState({ buffer: Buffer(reader.result) })\r\n          console.log('buffer', this.state.buffer)\r\n        }\r\n      }\r\n    \r\n      uploadImage = () => {\r\n        console.log(\"Submitting file to ipfs...\")\r\n    \r\n        //adding file to the IPFS\r\n        //console.log(this.state.buffer);\r\n        ipfs.add(this.state.buffer, (error, result) => {\r\n          console.log('Ipfs result', result)\r\n          if(error) {\r\n            console.error(error)\r\n            return\r\n          }\r\n    \r\n          this.setState({ loading: true });\r\n\r\n\r\n          //this.state.decentragram.methods.uploadImage(result[0].hash, description).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n            //this.setState({ loading: false })\r\n         // })\r\n         const res = this.props.contract.methods\r\n            .addCertificate(\r\n                this.props.current,\r\n                this.props.art.stu_id,\r\n                this.props.art.stu_aadhar_no,\r\n                result[0].hash,\r\n                this.state.certname\r\n            )\r\n            .send({ from: this.props.accounts, gas: 1000000 }).on('transactionHash', (hash) => {\r\n                this.setState({ loading: false })\r\n                this.toggleModal();\r\n            })\r\n            \r\n        \r\n        })\r\n      }\r\n    \r\n      \r\n    render() {\r\n                let but = (this.props.show == this.props.art.stu_aadhar_no ? 'visible':'invisible')\r\n                let bux;\r\n                let xyz = ((this.props.show == this.props.art.stu_aadhar_no) && (this.props.singlecolID != this.state.clid) ? 'invisible':'visible');\r\n                // if(this.props.clgaddr){\r\n                //     console.log(\"if\")\r\n                //  bux = 'visible';\r\n                // }\r\n                // else\r\n                {\r\n                    console.log(\"single col\",this.props.singlecolID);\r\n                    console.log(\"clg id\",this.state.clid);\r\n                bux = this.props.show != 0? (this.props.show == this.props.art.stu_aadhar_no ? 'visible':'invisible') : 'visible';\r\n                x = this.props.show != 0? (this.props.show == this.props.art.stu_aadhar_no ? '':'none') : '';\r\n                 //xyz = (this.props?.singlecolId == this.props.art.cllg_id ? 'visible':'invisible');\r\n                }\r\n                let butname = 'Add Certficate';\r\n        return (\r\n                <Card className={bux} style={{display : `${x}`}}>\r\n                 <Link to={`/card/${this.props.art.stu_id}`}>\r\n                                  <i className=\"fa fa-user-circle-o fa-4x\"></i>\r\n                                </Link>\r\n                <CardBody>\r\n                <CardTitle><small>Student ID : {this.props.art.stu_id}</small></CardTitle>\r\n                <CardText><small>Student Adhar no : {this.props.art.stu_aadhar_no}</small></CardText>\r\n                <CardText><small>Student Name : {this.props.art.stu_name}</small></CardText>\r\n                <CardText><small>College Id : {this.props.art.cllg_id}</small></CardText>\r\n                <CardText><small>Certificate Count : {this.props.art.certcount}</small></CardText>\r\n                <Button className={xyz} type=\"submit\" color=\"primary\" onClick={this.toggleModal}>\r\n                    {butname}\r\n                </Button>\r\n                <Modal\r\n                    isOpen={this.state.isModalOpen}\r\n                    toggle={this.toggleModal}\r\n                    className='modal-xl'>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        <h3>Add Certificate</h3>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <div className='row pl-5 pr-5'>\r\n                                <div className='col-6'>\r\n                                    <FormGroup>\r\n                                        <Label htmlFor='title' className='ml-3'>\r\n                                             Certificate Name\r\n                                        </Label>\r\n                                        <Input\r\n                                            type='text'\r\n                                            id='certname'\r\n                                            name='certname'\r\n                                            onChange={this.handleInputChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                    <FormGroup>\r\n                                    <Label htmlFor='fileupload' className='ml-3'>\r\n                                             Certificate Upload\r\n                                        </Label>\r\n                                    <Input type='file' accept=\".jpg, .jpeg, .png, .bmp, .gif\" name = \"fileupload\" onChange={this.captureFile} />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                           \r\n                            <br />\r\n                           \r\n                            <br/>\r\n                            <div className='row pl-5'>\r\n                                <div className='col-6'>\r\n                                    <Button\r\n                                        color='primary'\r\n                                        onClick={this.uploadImage}\r\n                                        >\r\n                                        Add\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nclass  AllStuComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            docCount: 0,\r\n            art: [],\r\n            cust: [],\r\n            manuf: [],\r\n            clgname: '',\r\n            isModalOpen1: false,\r\n            title: '',\r\n            clgid : 0,\r\n            stuname : '',\r\n            stuadd : '',\r\n            artUrl: '',\r\n            price: '',\r\n            artHash: '',\r\n            perCut: 0,\r\n            current: 0 ,\r\n            reg: null,\r\n            show:0,\r\n            clgaddr : null,\r\n            bul : 0  ,\r\n            singlecol:0,\r\n            clid : 0      };\r\n        this.toggleModal1 = this.toggleModal1.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.fileSelectHandler = this.fileSelectHandler.bind(this);\r\n        this.creatingItems = this.creatingItems.bind(this);\r\n\r\n\r\n    }\r\n\r\n    toggleModal1() {\r\n        this.setState({\r\n            isModalOpen1: !this.state.isModalOpen1\r\n        });\r\n    }\r\n\r\n    creatingItems = async () => {\r\n       \r\n        \r\n        const res = await this.props.contract.methods\r\n            .addStudent(\r\n                this.state.current,\r\n                this.state.stuadd,\r\n                this.state.stuname\r\n            )\r\n            .send({ from: this.props.accounts, gas: 10000000 });\r\n\r\n        this.toggleModal1();\r\n    };\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n     let x = this.props.singlecoll;\r\n     console.log(x);\r\n     this.setState({current : this.props.current, art : this.props.art, reg : x});\r\n     var c = this.props.current == null ? 0:this.props.current;\r\n     var rex = await this.props.contract?.methods.colId(c).call();\r\n     console.log(rex);\r\n     if(rex == this.props.accounts){ \r\n     this.setState({clgaddr : true})\r\n     let sincol = await this.props?.singlecolId;\r\n        //let clID = await this.props?.art.cllg_id \r\n        this.setState({singlecol : sincol});\r\n\r\n     }\r\n     console.log(this.state.singlecol)\r\n    }\r\n\r\n    fileSelectHandler = (event) => {\r\n        console.log(event.target.files);\r\n        this.setState({\r\n            selectedFile: event.target.files[0]\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        \r\n       \r\n        const Menu = this.state.art?.map((x) => {\r\n            console.log(x);\r\n          \r\n            if(x.cllg_id == this.state.current){\r\n            return (\r\n                <div key={x} className='col-4 col-md-3'>\r\n                    <Allpatrender\r\n                        art={x}\r\n                        current={this.state.current}\r\n                        ipfs = {this.props.ipfs}\r\n                        show = {this.state.show}\r\n                        contract={this.props.contract}\r\n                        accounts={this.props.accounts}\r\n                        clgaddr = {this.state.clgaddr}\r\n                        singlecolID = {this.state.singlecol}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n            );\r\n            }\r\n            else if(this.state.bul == 1){\r\n                return (\r\n                    <div key={x} className='col-4 col-md-3'>\r\n                        <Allpatrender\r\n                            art={x}\r\n                            current={this.state.current}\r\n                            dish={this.props.dish}\r\n                            ipfs = {this.props.ipfs}\r\n                            show = {this.state.show}\r\n                            contract={this.props.contract}\r\n                            accounts={this.props.accounts}\r\n                            clgaddr = {this.state.clgaddr}\r\n                            singlecolID = {this.state.singlecol}\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        //let ch = 'visible';\r\n        console.log(this.state.reg);\r\n        let ch = this.state.reg? 'visible':'invisible';\r\n        return (\r\n            <div className='container'>\r\n                <h2>My Students</h2>\r\n                <Button\r\n                    color='success'\r\n                    className={ch}\r\n                    onClick={this.toggleModal1}>\r\n                    Add Student\r\n                </Button>\r\n                <Form onSubmit={(event) => {\r\n                event.preventDefault()\r\n                const aadharno = this.imageDescription.value\r\n                console.log(aadharno);\r\n                this.setState({show : aadharno,bul : 1});\r\n                //this.props.uploadImage(description)\r\n              }} >\r\n                  <div className=\"form-group mr-sm-2\">\r\n                    <br></br>\r\n                    <h4>Search By Aadhar</h4>\r\n                      <input\r\n                        id=\"imageDescription\"\r\n                        type=\"text\"\r\n                        ref={(input) => { this.imageDescription = input }}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Aadhar No.\"\r\n                        required />\r\n                  </div>\r\n                <Button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\">Search</Button>\r\n              </Form>\r\n                <Modal\r\n                    isOpen={this.state.isModalOpen1}\r\n                    toggle={this.toggleModal1}\r\n                    className='modal-xl'>\r\n                    <ModalHeader toggle={this.toggleModal1}>\r\n                        <h3>Add Student</h3>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <div className='row pl-5 pr-5'>\r\n                                <div className='col-3'>\r\n                                    <FormGroup>\r\n                                        <Label htmlFor='title' className='ml-3'>\r\n                                             Student Aadhar\r\n                                        </Label>\r\n                                        <Input\r\n                                            type='number'\r\n                                            id='stuadd'\r\n                                            name='stuadd'\r\n                                            onChange={this.handleInputChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                    <FormGroup>\r\n                                        <Label htmlFor='title' className='ml-3'>\r\n                                             Student Name\r\n                                        </Label>\r\n                                        <Input\r\n                                            type='text'\r\n                                            id='stuname'\r\n                                            name='stuname'\r\n                                            onChange={this.handleInputChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                           \r\n                            <br />\r\n                            <div className='row pl-5'>\r\n                                <div className='col-6'>\r\n                                    <Button\r\n                                        color='primary'\r\n                                        onClick={this.creatingItems}\r\n                                        >\r\n                                        Add\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <br />\r\n                <br />\r\n                <div className='row'>{Menu}</div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllStuComponent;\r\n","import Web3 from \"web3\";\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    \r\n    window.addEventListener(\"load\", async () => {\r\n    \r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n    \r\n          await window.ethereum.enable();\r\n          \r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      \r\n      else if (window.web3) {\r\n      \r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      \r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://127.0.0.1:8545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;\r\n","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem } from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\nimport Web3 from \"web3\";\r\nimport '../App.css'\r\nvar util;\r\nvar util1;\r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = { isNavOpen : false }\r\n        this.togglenav = this.togglenav.bind(this);\r\n\r\n    }\r\n\r\n    togglenav(){\r\n        this.setState({isNavOpen : !this.state.isNavOpen});\r\n    }\r\n    conver = async (x) => {\r\n\r\n        util =  (Web3.utils.toWei(x, 'milli'));\r\n    }\r\n    converb = async (x) => {\r\n        util1 = (Web3.utils.fromWei(x, 'milli'));\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container justify-center\">\r\n                    \r\n                        <NavbarToggler onClick={this.togglenav}/>\r\n                        <NavbarBrand className=\"mr-auto\" >CERTICHAIN</NavbarBrand>\r\n                        <Collapse isOpen = {this.state.isNavOpen} navbar>\r\n                        \r\n                            <Nav navbar className=\"m-auto\">\r\n                            \r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/home\">Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                 <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/allclg\">All College</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                 <NavLink className=\"nav-link\" style={{width:200,justifyContent:'space-around'}} to=\"/mystu\">My Student</NavLink>\r\n                            </NavItem> \r\n                            </Nav>\r\n                            \r\n                        </Collapse>\r\n                    </div>\r\n                    <h6 style={{ color: \"white\"}}><small>{this.props.accounts}</small>\r\n                    <br/><small>Balance : {Web3.utils.fromWei(this.props.balance.toString(), 'ether')}</small></h6>\r\n                </Navbar>\r\n            \r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { Container,Form,Button } from 'reactstrap';\r\n\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedFile: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <Container>\r\n                        <h2>Welcome to Certichain</h2>\r\n                       \r\n                    </Container>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\n//import moment from 'moment';\r\nimport {Button,Form,FormGroup,Label,Input,Col,Card,CardImg,CardTitle,CardBody,CardText,Modal,ModalHeader,ModalBody} from 'reactstrap';\r\n\r\nimport Web3 from 'web3';\r\n\r\n\r\nlet allcoll = [];\r\nlet alldocs = [];\r\nconst ETHER = 1000000000000000000;\r\n\r\nclass Allpatrender extends Component {\r\n    // let day = moment.unix(art.dateofComp);\r\n    // let xy = art.dateofComp;\r\n    // let date = new Date(xy*1000);\r\n    // let time = day.format('dddd MMMM Do YYYY, h:mm:ss a');\r\n    // let yz = xy != 0?\"bg-success text-white\":\"\";\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            docCount: 0,\r\n            art: [],\r\n            isModalOpen: false,\r\n            sellPrice: 0\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.togglereg = this.togglereg.bind(this);\r\n    }\r\n\r\n    togglereg = async () => {\r\n        if(this.props.art.isregistered){\r\n            const res = await this.props.contract.methods\r\n            .registerCollege(\r\n                this.props.art.clg_id,\r\n                false\r\n            )\r\n            .send({ from: this.props.accounts, gas: 1000000 });\r\n        }\r\n        else{\r\n            const res = await this.props.contract.methods\r\n            .registerCollege(\r\n                this.props.art.clg_id,\r\n                true\r\n            )\r\n            .send({ from: this.props.accounts, gas: 1000000 });\r\n     \r\n        }\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n\r\n    render() {  \r\n                //let but = ;\r\n                let but = this.props.owner == this.props.accounts?'visible':'invisible';;\r\n                let butname = this.props.art.isregistered?'Unregister':'register';\r\n        return (\r\n                <Card >\r\n                <i className=\"fa fa-institution fa-4x\"></i>\r\n                <CardBody>\r\n                <CardTitle><small>College ID : {this.props.art.clg_id}</small></CardTitle>\r\n                <CardText><small>College Address : {this.props.art.clg_address}</small></CardText>\r\n                <CardText><small>College Name : {this.props.art.clg_name}</small></CardText>\r\n                <CardText><small>Registration Status : {this.props.art.isregistered?'True':'False'}</small></CardText>\r\n                <Button className={but} type=\"submit\" color=\"primary\" onClick={this.togglereg}>\r\n                    {butname}\r\n                </Button>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nclass  AllCllgComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            docCount: 0,\r\n            art: [],\r\n            cust: [],\r\n            manuf: [],\r\n            clgname: '',\r\n            isModalOpen1: false,\r\n            title: '',\r\n            artUrl: '',\r\n            price: '',\r\n            artHash: '',\r\n            perCut: 0,\r\n            owner:''\r\n        };\r\n        this.toggleModal1 = this.toggleModal1.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.fileSelectHandler = this.fileSelectHandler.bind(this);\r\n        this.creatingItems = this.creatingItems.bind(this);\r\n\r\n\r\n    }\r\n\r\n    toggleModal1() {\r\n        this.setState({\r\n            isModalOpen1: !this.state.isModalOpen1\r\n        });\r\n    }\r\n\r\n    creatingItems = async () => {\r\n       \r\n       \r\n        const res = await this.props.contract.methods\r\n            .addCollege(\r\n                this.state.clgname\r\n            )\r\n            .send({ from: this.props.accounts, gas: 1000000 });\r\n        console.log(res);\r\n        console.log(this.state.clgname);\r\n        this.toggleModal1();\r\n    };\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var res = await this.props.contract?.methods.owner().call();\r\n        console.log(res);\r\n        this.setState({owner : res});\r\n    }\r\n\r\n    fileSelectHandler = (event) => {\r\n        console.log(event.target.files);\r\n        this.setState({\r\n            selectedFile: event.target.files[0]\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const Menu = this.props.art?.map((x) => {\r\n            return (\r\n                <div key={x} className='col-4 col-md-3'>\r\n                    <Allpatrender\r\n                        art={x}\r\n                        owner={this.state.owner}\r\n                        contract={this.props.contract}\r\n                        accounts={this.props.accounts}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        let ch = 'visible';\r\n        return (\r\n            <div className='container'>\r\n                <h2>All College</h2>\r\n                <Button\r\n                    color='success'\r\n                    className={ch}\r\n                    onClick={this.toggleModal1}>\r\n                    Add College\r\n                </Button>\r\n\r\n                <Modal\r\n                    isOpen={this.state.isModalOpen1}\r\n                    toggle={this.toggleModal1}\r\n                    className='modal-xl'>\r\n                    <ModalHeader toggle={this.toggleModal1}>\r\n                        <h3>Add College</h3>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <div className='row pl-5 pr-5'>\r\n                                <div className='col-6'>\r\n                                    <FormGroup>\r\n                                        <Label htmlFor='title' className='ml-3'>\r\n                                            College Name\r\n                                        </Label>\r\n                                        <Input\r\n                                            type='text'\r\n                                            id='clgname'\r\n                                            name='clgname'\r\n                                            onChange={this.handleInputChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                               \r\n                            </div>\r\n                           \r\n                            <br />\r\n                            <div className='row pl-5'>\r\n                                <div className='col-6'>\r\n                                    <Button\r\n                                        color='primary'\r\n                                        onClick={this.creatingItems}\r\n                                        >\r\n                                        Add\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <br />\r\n                <br />\r\n                <div className='row'>{Menu}</div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllCllgComponent;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\" style={{bottom:0}}>\r\n            \r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright @2021</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Card,CardBody,CardSubtitle,CardText,CardTitle,CardImg,CardHeader,Table,Input,Modal,ModalHeader,ModalBody,Dropdown,DropdownToggle,DropdownMenu,DropdownItem} from 'reactstrap';\r\n\r\n\r\n    \r\nclass Certificate extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedFile: null\r\n        };\r\n    }\r\n    \r\n  \r\n    render(){\r\n        console.log(this.props.art);\r\n        let cert = this.props.art;\r\n    return(\r\n        <div>\r\n            <Card >\r\n            <img src={`https://ipfs.infura.io/ipfs/${this.props.art.ipfs_hash}`} style={{ maxWidth: '420px'}}/>\r\n                <CardBody>\r\n                <CardTitle><small>Student ID : {cert.stu_id}</small></CardTitle>\r\n            <CardText><small>Student Adhar no : {cert.stu_aadhar_no}</small></CardText>\r\n            <CardText><small>College Id : {cert.college_id}</small></CardText>\r\n            <CardText><small>Certificate Id : {cert.cert_id}</small></CardText>\r\n            <CardText><small>Certificate Name : {cert.cert_name}</small></CardText>\r\n            <CardText><small>IPFS Hash : {cert.ipfs_hash}</small></CardText>\r\n        \r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n    }\r\n};\r\n\r\nclass CardDetail extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedFile: null,ac : []\r\n        };\r\n    }\r\n    \r\n    \r\n    async componentDidMount() {\r\n      \r\n    this.render();\r\n    }\r\n          \r\n\r\n    \r\n    \r\n\r\n\r\n  \r\n    render(){\r\n        console.log(this.props.allce);\r\n        const Menu = this.props.allce?.map((x) => {\r\n            console.log(x);\r\n            return (\r\n                <div key={x} className='col-4 col-md-3'>\r\n                    <Certificate\r\n                        art={x}\r\n\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n            );\r\n        });\r\n    return (\r\n            <>\r\n            <div>\r\n                \r\n                    <h2>Welcome to Certichain</h2>\r\n                    <div className='row'>{Menu}</div>\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n    }\r\n}\r\nexport default CardDetail;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n//import moment from 'moment';\r\nimport {Button,Form,FormGroup,Label,Input,Col,Card,CardImg,CardTitle,CardBody,CardText,Modal,ModalHeader,ModalBody} from 'reactstrap';\r\n\r\nimport Web3 from 'web3';\r\n\r\n\r\nlet allcoll = [];\r\nlet alldocs = [];\r\nconst ETHER = 1000000000000000000;\r\n\r\nclass Allpatrender extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            docCount: 0,\r\n            isModalOpen: false,\r\n            sellPrice: 0\r\n        };\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Card >\r\n                <div style={{ maxWidth: '250px'}}>\r\n              <a href={`https://ipfs.infura.io/ipfs/${this.props.art.ipfs_hash}`} target=\"_black\" ><img src={`https://ipfs.infura.io/ipfs/${this.props.art.ipfs_hash}`} style={{ maxWidth: '250px'}}/></a>\r\n                </div>\r\n            <CardBody>\r\n          \r\n            <CardTitle><small>Student ID : {this.props.art.stu_id}</small></CardTitle>\r\n        <CardText><small>College Id : {this.props.art.college_id}</small></CardText>\r\n        <CardText><small>Student Adhar no : {this.props.art.student_aadhar}</small></CardText>\r\n        <CardText><small>Certificate Id : {this.props.art.cert_id}</small></CardText>\r\n        <CardText><small>Certificate Name : {this.props.art.cert_name}</small></CardText>\r\n        <CardText><small>IPFS Hash : {this.props.art.ipfs_hash}</small></CardText>\r\n    \r\n            </CardBody>\r\n            \r\n        </Card>\r\n        );\r\n    }\r\n}\r\n\r\nclass  AllCertComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            docCount: 0,\r\n            art: [],\r\n            cust: [],\r\n            manuf: [],\r\n            clgname: '',\r\n            isModalOpen1: false,\r\n            title: '',\r\n            artUrl: '',\r\n            price: '',\r\n            artHash: '',\r\n            perCut: 0\r\n        };\r\n\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    render() {\r\n        console.log(this.props.art);\r\n        for(let i = 0;i<this.props.art?.length;i++){\r\n            console.log(this.props.art[i]);\r\n        }\r\n        const Menu = this.props.art.map((x) => {\r\n            if(x.stu_id == this.props.matchId){\r\n            return (\r\n                <div key={x.cert_id} className='col-4 col-md-3'>\r\n                    <Allpatrender\r\n                        art={x}\r\n                        contract={this.props.contract}\r\n                        accounts={this.props.accounts}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n            );\r\n            }\r\n            else{\r\n                return(<></>);\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div className='container'>\r\n                <h2>All Certficate</h2>\r\n                \r\n               \r\n                <br />\r\n                <br />\r\n                <div className='row'>{Menu}</div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllCertComp;\r\n","import React, { Component } from \"react\";\r\nimport BNContract from \"../contracts/Certificates.json\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport \"../App.css\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Home from './HomeComponent';\r\n// import SignUp from \"./SignUpComponent\";\r\n import  AllCllgComponent  from \"./AllCollegeComponent\";\r\n// import Shipment from \"./ShipmentComponent\";\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Footer from './FooterComponent';\r\n// import RegisterComp from './RegisterComponent';\r\nimport CardDetail from './CardDetailComponent';\r\nimport AllCertComp from './CardDetail';\r\n\r\nimport AllStuComponent from './AllStudentComponent';\r\n\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { storageValue: 0, web3: null, accounts: null,balance:0, contract: null ,res : null,dish : null,stu:null,allce : null,singlecoll:null,singlecolid : null};\r\n\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      // Get network provider and web3 instance.\r\n      const web3 = await getWeb3();\r\n\r\n      // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n      const balance = await web3.eth.getBalance(accounts[0]);\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = BNContract.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        BNContract.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n      );\r\n      // Set web3, accounts, and contract to the state, and then proceed with an\r\n      // example of interacting with the contract's methods.\r\n      console.log(instance)\r\n      this.setState({ web3, accounts : accounts[0] , contract: instance,balance,current : null});\r\n      var res = await this.state.contract?.methods.collegecnt().call();\r\n      console.log(res);\r\n             \r\n      var response= [];\r\n      for(var i=1;i<=res;i++){\r\n          var rex = await this.state.contract?.methods.colId(i).call();\r\n          response.push(rex);\r\n      }\r\n      console.log(response);\r\n      let allcoll = [];\r\n      for(var j=0;j<response.length;j++){\r\n          var xt = await this.state.contract.methods.colleges(response[j]).call();\r\n          allcoll.push(xt);\r\n       \r\n      }\r\n\r\n      console.log(allcoll);\r\n      this.setState({ dish : allcoll});\r\n      \r\n    \r\n      allcoll.map((x) => {\r\n        if(x.clg_address == this.state.accounts){\r\n            this.setState({current : x.clg_id});\r\n        } \r\n    })\r\n    \r\n      var res = await this.state.contract?.methods.studentcnt().call();\r\n      console.log(res);\r\n             \r\n      var response= [];\r\n      for(var i=1;i<=res;i++){\r\n          var rex = await this.state.contract?.methods.stuId(i).call();\r\n          response.push(rex);\r\n      }\r\n      console.log(response);\r\n      allcoll = [];\r\n      for(var j=0;j<response.length;j++){\r\n          var xt = await this.state.contract.methods.students(response[j]).call();\r\n          allcoll.push(xt);\r\n       \r\n      }\r\n      \r\n      console.log(this.state.current);\r\n      var res = await this.state.contract?.methods.certificatecnt().call();\r\n      console.log(res);\r\n             \r\n      var response= [];\r\n      for(var i=1;i<=res;i++){\r\n          var rex = await this.state.contract?.methods.certy(i).call();\r\n          response.push(rex);\r\n      }\r\n      this.setState({ stu : allcoll,allce : response});\r\n      let singleclg = await this.state.dish.filter(x => x.clg_id == this.state.current);\r\n      \r\n      this.setState({singlecoll : singleclg[0].isregistered})\r\n      this.setState({singlecolid : singleclg[0].clg_id})\r\n      console.log(this.state.singlecoll);\r\n\r\n      \r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      \r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n \r\n\r\n\r\n  render() {\r\n    const CardWithId = ({ match }) => {\r\n      let allcerts = [];\r\n      \r\n    //   let func = async() => {\r\n    //   let all = await this.state.stu?.filter((singleart) => singleart.stu_id === match.params.id)[0];\r\n    //   let aadharstu = all.stu_aadhar_no;\r\n    //    var certids = await this.state.contract?.methods.getStuCert(aadharstu).call();\r\n    //    console.log(certids);\r\n    //       let eachcert = async(ele) => {    \r\n    //     var rex4 = await this.state.contract?.methods.certy(ele).call();\r\n    //      allcerts.push(rex4);\r\n    //  }\r\n    //    certids.forEach(ele => {eachcert(ele);});\r\n      \r\n    // console.log(allcerts);\r\n    //   return (\r\n    //     <AllCertComp\r\n    //       art={allcerts}\r\n          \r\n    //       contract={this.state.contract} accounts={this.state.accounts} matchId={match.params.id}\r\n    //     />\r\n    //   );\r\n    //   }\r\n    //   func();\r\n      return (\r\n        <AllCertComp\r\n          art={this.state.allce}\r\n          allcert = {this.state.allce}\r\n          contract={this.state.contract} accounts={this.state.accounts} matchId={match.params.id}\r\n        />\r\n      );\r\n    };\r\n    return (\r\n      <div className=\"App\">\r\n        <Header contract={this.state.contract} accounts={this.state.accounts} registered = {this.state.registered} balance={this.state.balance} web3={this.state.web3}/>\r\n        <Switch>\r\n            <Route exact path=\"/home\" component={() => <Home contract={this.state.contract} accounts={this.state.accounts}/>}/>\r\n            <Route exact path='/allclg' component={() => (< AllCllgComponent art = {this.state.dish} contract={this.state.contract} accounts={this.state.accounts}/>)}/>\r\n            <Route exact path='/mystu' component={() => (< AllStuComponent dish = {this.state.dish} art = {this.state.stu} ipfs = {ipfs} current = {this.state.current} singlecoll={this.state.singlecoll} singlecolId = {this.state.singlecolid} contract={this.state.contract} accounts={this.state.accounts}/>)}/>\r\n            <Route path='/card/:id' component={CardWithId} />\r\n            <Redirect to=\"/home\"/>\r\n        </Switch>\r\n        <Footer/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Main;","\r\nimport React, { Component } from \"react\";\r\nimport Main from './Components/MainComponents.js';\r\nimport {HashRouter,BrowserRouter} from 'react-router-dom';\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n      <div className=\"App\">\r\n        <Main />\r\n      </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}